name: Sonarr

on:
  push:
    branches:
      - feat/*
      - fix/*
      - main
      - renovate/*
    paths:
      - .github/workflows/sonarr.yml
      - contexts/sonarr/*
    tags:
      - "v*"
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/sonarr.yml
      - contexts/sonarr/*

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  IMAGE_NAME: ${{ github.repository }}/sonarr
  REGISTRY: ghcr.io

jobs:
  build-publish:
    # We don't need to run this on Renovate PRs. We will already test the `renovate/foo` branch.
    if: github.event_name != 'pull_request' || github.actor != 'renovate[bot]'
    strategy:
      matrix:
        VERSION_SONARR:
          # renovate: datasource=github-releases depName=Sonarr/Sonarr versioning=semver
          - "4.0.2.1183"

    runs-on: ubuntu-22.04
    # Container needs to be able to read repo and publish packages.
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Log in to the container registry
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=false
            suffix=-${{ matrix.VERSION_SONARR }}
          labels: |
            org.opencontainers.image.description=Sonarr
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=https://github.com/oliversalzburg/containers
            org.opencontainers.image.title=sonarr
            org.opencontainers.image.version=${{ github.ref_name }}
          tags: |
            type=edge,branch=main
            type=ref,event=branch,enable=${{ github.ref_name != 'main' }}
            type=ref,event=pr
            type=ref,event=tag

      - name: Build and push container image
        uses: int128/kaniko-action@210291d6a7168f538f03813da1daad216144fb0e # v1
        with:
          context: contexts/sonarr
          build-args: |
            VERSION_SONARR=${{ matrix.VERSION_SONARR }}
          cache: true
          cache-repository: ${{ env.REGISTRY }}/${{ github.repository }}/cache
          push: ${{ github.event_name == 'push' && ( github.ref_name == 'main' || startsWith(github.ref, 'refs/tags/v') ) }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}

  qa-successful:
    runs-on: ubuntu-22.04
    needs: build-publish
    if: always()
    steps:
      - name: Success
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: Failure
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1

  delete-untagged:
    runs-on: ubuntu-22.04
    needs: qa-successful
    if: github.event_name == 'push' && ( github.ref_name == 'main' || startsWith(github.ref, 'refs/tags/v') )
    permissions:
      contents: read
      packages: write
    steps:
      - name: Delete all containers from package without tags
        uses: Chizkiyahu/delete-untagged-ghcr-action@bbbab219998078a91c9b283dac9389b825894603 # v3
        with:
            token: ${{ github.token }}
            repository_owner: ${{ github.repository_owner }}
            repository: ${{ github.repository }}
            package_name: containers/sonarr
            untagged_only: true
            owner_type: user
