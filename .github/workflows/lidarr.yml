name: Lidarr

on:
  push:
    paths:
      - .github/workflows/lidarr.yml
      - contexts/lidarr/*
  pull_request:
    paths:
      - .github/workflows/lidarr.yml
      - contexts/lidarr/*
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  # renovate: datasource=github-releases depName=Lidarr/Lidarr versioning=loose
  LIDARR_VERSION: "2.14.5.4836"

jobs:
  versions:
    name: Versions
    outputs:
      LIDARR_VERSION: ${{ env.LIDARR_VERSION }}
    permissions:
      contents: none
    runs-on: ubuntu-24.04
    steps:
      - name: Generate outputs
        run: |
          echo "LIDARR_VERSION=${{ env.LIDARR_VERSION }}" >> $GITHUB_OUTPUT

  build-publish:
    name: Call Build
    needs: versions
    permissions:
      attestations: write
      contents: read
      id-token: write
      packages: write
      security-events: write
    uses: oliversalzburg/workflows/.github/workflows/publish-oci.yml@main
    with:
      build-args: |
        LIDARR_VERSION=${{ needs.versions.outputs.LIDARR_VERSION }}
      context: contexts/lidarr
      dist-tag: latest
      image-description: Lidarr is a music collection manager for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new albums from your favorite artists and will interface with clients and indexers to grab, sort, and rename them. It can also be configured to automatically upgrade the quality of existing files in the library when a better quality format becomes available.
      image-name: oliversalzburg/containers/lidarr
      image-tag: v${{ needs.versions.outputs.LIDARR_VERSION }}
      image-title: Lidarr
      is-latest: true
      push: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
      with-sarif: false
      with-sbom: false

  qa-successful:
    if: ( success() || failure() )
    name: Evaluate QA results
    needs: build-publish
    permissions:
      contents: none
    runs-on: ubuntu-24.04
    steps:
      - name: Success
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: Failure
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
