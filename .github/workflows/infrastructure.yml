name: Infrastructure

on:
  push:
    paths:
      - .github/workflows/container-build.yml
      - .github/workflows/infrastructure.yml
      - contexts/infrastructure/*
  pull_request:
    paths:
      - .github/workflows/container-build.yml
      - .github/workflows/infrastructure.yml
      - contexts/infrastructure/*
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  # renovate: datasource=github-tags depName=aws/aws-cli versioning=semver
  AWS_CLI_VERSION: "2.16.1"
  # renovate: datasource=github-releases depName=opentofu/opentofu versioning=semver
  OPENTOFU_VERSION: "1.7.2"
  # renovate: datasource=github-tags depName=python/cpython versioning=semver-coerced
  PYTHON_VERSION: "3.12.3"
  # renovate: datasource=github-releases depName=hashicorp/terraform versioning=hashicorp
  TERRAFORM_VERSION: "1.8.5"

jobs:
  versions:
    name: Versions
    outputs:
      AWS_CLI_VERSION: ${{ env.AWS_CLI_VERSION }}
      OPENTOFU_VERSION: ${{ env.OPENTOFU_VERSION }}
      PYTHON_VERSION: ${{ env.PYTHON_VERSION }}
      TERRAFORM_VERSION: ${{ env.TERRAFORM_VERSION }}
    runs-on: ubuntu-22.04
    steps:
      - name: Generate outputs
        run: |
          echo "AWS_CLI_VERSION=${{ env.AWS_CLI_VERSION }}" >> $GITHUB_OUTPUT
          echo "OPENTOFU_VERSION=${{ env.OPENTOFU_VERSION }}" >> $GITHUB_OUTPUT
          echo "PYTHON_VERSION=${{ env.PYTHON_VERSION }}" >> $GITHUB_OUTPUT
          echo "TERRAFORM_VERSION=${{ env.TERRAFORM_VERSION }}" >> $GITHUB_OUTPUT

  build-publish:
    # We don't need to run this on Renovate PRs. We will already test the `renovate/foo` branch.
    if: github.event_name != 'pull_request' || github.actor != 'renovate[bot]'
    name: Call Build
    needs: versions
    permissions:
      attestations: write
      contents: read
      id-token: write
      packages: write
      security-events: write
    strategy:
      matrix:
        AWS_CLI_VERSION:
          - ${{ needs.versions.outputs.AWS_CLI_VERSION }}
        OPENTOFU_VERSION:
          - ${{ needs.versions.outputs.OPENTOFU_VERSION }}
        # https://endoflife.date/python
        PYTHON_VERSION:
          - "3.8.19" # latest 3.8
          - "3.9.19" # latest 3.9
          - "3.10.14" # latest 3.10
          - "3.11.9" # latest 3.11
          - ${{ needs.versions.outputs.PYTHON_VERSION }}
        # https://endoflife.date/terraform
        TERRAFORM_VERSION:
          - "1.7.5"
          - ${{ needs.versions.outputs.TERRAFORM_VERSION }}
    uses: ./.github/workflows/container-build.yml
    with:
      build_args: |
        AWS_CLI_VERSION=${{ matrix.AWS_CLI_VERSION }}
        OPENTOFU_VERSION=${{ matrix.OPENTOFU_VERSION }}
        PYTHON_VERSION=${{ matrix.PYTHON_VERSION }}
        TERRAFORM_VERSION=${{ matrix.TERRAFORM_VERSION }}
      context: contexts/infrastructure
      image_description: Common tooling for IaC tasks.
      image_name: infrastructure
      image_tag: awcli-${{ matrix.AWS_CLI_VERSION }}_opentofu-${{ matrix.OPENTOFU_VERSION }}_python-${{ matrix.PYTHON_VERSION }}_terraform-${{ matrix.TERRAFORM_VERSION }}
      image_title: IaC Tooling
      is_latest: false
      push: ${{ github.event_name == 'push' && github.ref_name == 'main' }}

  qa-successful:
    if: ( success() || failure() )
    name: Evaluate QA results
    needs: build-publish
    runs-on: ubuntu-22.04
    steps:
      - name: Success
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: Failure
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1

  delete-untagged:
    if: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
    name: Clean up layers
    needs: qa-successful
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
      - name: Delete untagged layers
        uses: Chizkiyahu/delete-untagged-ghcr-action@e8c780ca2d589797e657691fc16bffe066714890 # v4
        with:
          token: ${{ github.token }}
          repository_owner: ${{ github.repository_owner }}
          repository: ${{ github.repository }}
          package_name: containers/infrastructure
          untagged_only: true
          owner_type: user
