name: ytdl-sub

on:
  push:
    paths:
      - .github/workflows/container-build.yml
      - .github/workflows/ytdl-sub.yml
      - contexts/ytdl-sub/*
  pull_request:
    paths:
      - .github/workflows/container-build.yml
      - .github/workflows/ytdl-sub.yml
      - contexts/ytdl-sub/*
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  # renovate: datasource=github-releases depName=jmbannon/ytdl-sub versioning=loose
  YTDLSUB_VERSION: "2024.07.04"

jobs:
  versions:
    name: Versions
    outputs:
      YTDLSUB_VERSION: ${{ env.YTDLSUB_VERSION }}
    runs-on: ubuntu-22.04
    steps:
      - name: Generate outputs
        run: |
          echo "YTDLSUB_VERSION=${{ env.YTDLSUB_VERSION }}" >> $GITHUB_OUTPUT

  build-publish:
    # We don't need to run this on Renovate PRs. We will already test the `renovate/foo` branch.
    if: github.event_name != 'pull_request' || github.actor != 'renovate[bot]'
    name: Call Build
    needs: versions
    permissions:
      attestations: write
      contents: read
      id-token: write
      packages: write
      security-events: write
    uses: oliversalzburg/workflows/.github/workflows/publish-oci.yml@main
    with:
      build_args: |
        YTDLSUB_VERSION=${{ needs.versions.outputs.YTDLSUB_VERSION }}
      context: contexts/ytdl-sub
      image_description: ytdl-sub is a command-line tool that downloads media via yt-dlp and prepares it for your favorite media player (Kodi, Jellyfin, Plex, Emby, modern music players).
      image_name: oliversalzburg/containers/ytdl-sub
      image_tag: ${{ needs.versions.outputs.YTDLSUB_VERSION }}
      image_title: ytdl-sub
      is_latest: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
      push: ${{ github.event_name == 'push' && github.ref_name == 'main' }}

  qa-successful:
    if: ( success() || failure() )
    name: Evaluate QA results
    needs: build-publish
    runs-on: ubuntu-22.04
    steps:
      - name: Success
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: Failure
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1

  delete-untagged:
    if: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
    name: Clean up layers
    needs: qa-successful
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
      - name: Delete untagged layers
        uses: Chizkiyahu/delete-untagged-ghcr-action@e8c780ca2d589797e657691fc16bffe066714890 # v4
        with:
          token: ${{ github.token }}
          repository_owner: ${{ github.repository_owner }}
          repository: ${{ github.repository }}
          package_name: containers/ytdl-sub
          untagged_only: true
          owner_type: user
